{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nexport const useOnClickOutside = (ref, setState) => {\n  _s();\n  useEffect(() => {\n    const closeOptionsModal = e => {\n      if (ref.current && !ref.current.contains(e.target)) {\n        setState(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", closeOptionsModal);\n    return () => document.removeEventListener(\"mousedown\", closeOptionsModal);\n  }, [ref, setState]);\n};\n_s(useOnClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useOnClickOutside","ref","setState","_s","closeOptionsModal","e","current","contains","target","document","addEventListener","removeEventListener"],"sources":["C:/Users/Tilwani's/Desktop/The-Dilemma/src/utils/useOnClickOutside.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (ref, setState) => {\n  useEffect(() => {\n    const closeOptionsModal = (e) => {\n      if (ref.current && !ref.current.contains(e.target)) {\n        setState(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", closeOptionsModal);\n    return () => document.removeEventListener(\"mousedown\", closeOptionsModal);\n  }, [ref, setState]);\n};\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAClDJ,SAAS,CAAC,MAAM;IACd,MAAMK,iBAAiB,GAAIC,CAAC,IAAK;MAC/B,IAAIJ,GAAG,CAACK,OAAO,IAAI,CAACL,GAAG,CAACK,OAAO,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;QAClDN,QAAQ,CAAC,KAAK,CAAC;MACjB;IACF,CAAC;IACDO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,iBAAiB,CAAC;IACzD,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,iBAAiB,CAAC;EAC3E,CAAC,EAAE,CAACH,GAAG,EAAEC,QAAQ,CAAC,CAAC;AACrB,CAAC;AAACC,EAAA,CAVWH,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}