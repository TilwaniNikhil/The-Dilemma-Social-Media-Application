{"ast":null,"code":"import { actionTypes } from \"../utils/constants\";\nexport const initialPostData = {\n  input: \"\",\n  media: null,\n  mediaAlt: \"\"\n};\nconst initialPostsState = {\n  posts: [],\n  postData: initialPostData,\n  post: {},\n  filterType: \"Latest\",\n  page: 1,\n  isNextPostLoading: false\n};\nconst {\n  GET_ALL_POSTS,\n  LIKE_POST,\n  DISLIKE_POST,\n  FILTER_POSTS,\n  CREATE_NEW_POST,\n  DELETE_POST,\n  EDIT_POST,\n  SET_PAGE,\n  SET_IS_NEXT_POST_LOADING,\n  GET_SINGLE_POST,\n  ADD_NEW_COMMENT,\n  DELETE_COMMENT,\n  EDIT_COMMENT\n} = actionTypes;\nconst postsReducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n  switch (type) {\n    case GET_ALL_POSTS:\n      return {\n        ...state,\n        posts: payload\n      };\n    case CREATE_NEW_POST:\n      return {\n        ...state,\n        posts: payload\n      };\n    case LIKE_POST:\n      return {\n        ...state,\n        posts: payload\n      };\n    case DISLIKE_POST:\n      return {\n        ...state,\n        posts: payload\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: payload\n      };\n    case EDIT_POST:\n      return {\n        ...state,\n        posts: payload\n      };\n    case FILTER_POSTS:\n      return {\n        ...state,\n        filterType: payload\n      };\n    case SET_PAGE:\n      return {\n        ...state,\n        page: payload\n      };\n    case SET_IS_NEXT_POST_LOADING:\n      return {\n        ...state,\n        isNextPostLoading: payload\n      };\n    case GET_SINGLE_POST:\n      return {\n        ...state,\n        post: payload\n      };\n    case ADD_NEW_COMMENT:\n      return {\n        ...state,\n        posts: payload,\n        post: payload.find(eachPost => {\n          var _state$post;\n          return eachPost._id === (state === null || state === void 0 ? void 0 : (_state$post = state.post) === null || _state$post === void 0 ? void 0 : _state$post._id) ? eachPost : state.post;\n        })\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        posts: payload,\n        post: payload.find(eachPost => {\n          var _state$post2;\n          return eachPost._id === (state === null || state === void 0 ? void 0 : (_state$post2 = state.post) === null || _state$post2 === void 0 ? void 0 : _state$post2._id) ? eachPost : state.post;\n        })\n      };\n    case EDIT_COMMENT:\n      return {\n        ...state,\n        posts: payload,\n        post: payload.find(eachPost => {\n          var _state$post3;\n          return eachPost._id === (state === null || state === void 0 ? void 0 : (_state$post3 = state.post) === null || _state$post3 === void 0 ? void 0 : _state$post3._id) ? eachPost : state.post;\n        })\n      };\n    default:\n      return state;\n  }\n};\nexport { initialPostsState, postsReducer };","map":{"version":3,"names":["actionTypes","initialPostData","input","media","mediaAlt","initialPostsState","posts","postData","post","filterType","page","isNextPostLoading","GET_ALL_POSTS","LIKE_POST","DISLIKE_POST","FILTER_POSTS","CREATE_NEW_POST","DELETE_POST","EDIT_POST","SET_PAGE","SET_IS_NEXT_POST_LOADING","GET_SINGLE_POST","ADD_NEW_COMMENT","DELETE_COMMENT","EDIT_COMMENT","postsReducer","state","_ref","type","payload","find","eachPost","_state$post","_id","_state$post2","_state$post3"],"sources":["C:/Users/Tilwani's/Desktop/The-Dilemma/src/reducers/postsReducer.js"],"sourcesContent":["import { actionTypes } from \"../utils/constants\";\n\nexport const initialPostData = {\n  input: \"\",\n  media: null,\n  mediaAlt: \"\",\n};\n\nconst initialPostsState = {\n  posts: [],\n  postData: initialPostData,\n  post: {},\n  filterType: \"Latest\",\n  page: 1,\n  isNextPostLoading: false,\n};\n\nconst {\n  GET_ALL_POSTS,\n  LIKE_POST,\n  DISLIKE_POST,\n  FILTER_POSTS,\n  CREATE_NEW_POST,\n  DELETE_POST,\n  EDIT_POST,\n  SET_PAGE,\n  SET_IS_NEXT_POST_LOADING,\n  GET_SINGLE_POST,\n  ADD_NEW_COMMENT,\n  DELETE_COMMENT,\n  EDIT_COMMENT,\n} = actionTypes;\n\nconst postsReducer = (state, { type, payload }) => {\n  switch (type) {\n    case GET_ALL_POSTS:\n      return { ...state, posts: payload };\n    case CREATE_NEW_POST:\n      return { ...state, posts: payload };\n    case LIKE_POST:\n      return { ...state, posts: payload };\n    case DISLIKE_POST:\n      return { ...state, posts: payload };\n    case DELETE_POST:\n      return { ...state, posts: payload };\n    case EDIT_POST:\n      return { ...state, posts: payload };\n    case FILTER_POSTS:\n      return { ...state, filterType: payload };\n    case SET_PAGE:\n      return { ...state, page: payload };\n    case SET_IS_NEXT_POST_LOADING:\n      return { ...state, isNextPostLoading: payload };\n    case GET_SINGLE_POST:\n      return { ...state, post: payload };\n    case ADD_NEW_COMMENT:\n      return {\n        ...state,\n        posts: payload,\n        post: payload.find((eachPost) =>\n          eachPost._id === state?.post?._id ? eachPost : state.post\n        ),\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        posts: payload,\n        post: payload.find((eachPost) =>\n          eachPost._id === state?.post?._id ? eachPost : state.post\n        ),\n      };\n    case EDIT_COMMENT:\n      return {\n        ...state,\n        posts: payload,\n        post: payload.find((eachPost) =>\n          eachPost._id === state?.post?._id ? eachPost : state.post\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport { initialPostsState, postsReducer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}