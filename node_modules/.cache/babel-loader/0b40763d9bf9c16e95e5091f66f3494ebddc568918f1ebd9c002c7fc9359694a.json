{"ast":null,"code":"import axios from \"axios\";\nconst getAllPostsService = async () => await axios.get(\"/api/posts\");\nconst getSinglePostService = async postId => await axios.get(`/api/posts/${postId}`);\nconst createPostService = async (content, mediaURL, mediaAlt, encodedToken) => await axios.post(\"/api/posts\", {\n  postData: {\n    content,\n    mediaURL,\n    mediaAlt\n  }\n}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst deletePostService = async (postId, encodedToken) => await axios.delete(`/api/posts/${postId}`, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst editPostService = async (postId, content, mediaURL, mediaAlt, encodedToken) => await axios.post(`/api/posts/edit/${postId}`, {\n  postData: {\n    content,\n    mediaURL,\n    mediaAlt\n  }\n}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst likePostService = async (postId, encodedToken) => await axios.post(`/api/posts/like/${postId}`, {}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst dislikePostService = async (postId, encodedToken) => await axios.post(`/api/posts/dislike/${postId}`, {}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst addCommentService = async (postId, commentData, encodedToken) => await axios.post(`/api/comments/add/${postId}`, {\n  commentData: commentData\n}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst editCommentService = async (postId, commentId, commentData, encodedToken) => await axios.post(`/api/comments/edit/${postId}/${commentId}`, {\n  commentData: commentData\n}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nconst deleteCommentService = async (postId, commentId, encodedToken) => await axios.post(`/api/comments/delete/${postId}/${commentId}`, {}, {\n  headers: {\n    authorization: encodedToken\n  }\n});\nexport { getAllPostsService, createPostService, editPostService, deletePostService, likePostService, dislikePostService, getSinglePostService, addCommentService, editCommentService, deleteCommentService };","map":{"version":3,"names":["axios","getAllPostsService","get","getSinglePostService","postId","createPostService","content","mediaURL","mediaAlt","encodedToken","post","postData","headers","authorization","deletePostService","delete","editPostService","likePostService","dislikePostService","addCommentService","commentData","editCommentService","commentId","deleteCommentService"],"sources":["C:/Users/Tilwani's/Desktop/The-Dilemma/src/services/postsServices.js"],"sourcesContent":["import axios from \"axios\";\n\nconst getAllPostsService = async () => await axios.get(\"/api/posts\");\n\nconst getSinglePostService = async (postId) =>\n  await axios.get(`/api/posts/${postId}`);\n\nconst createPostService = async (content, mediaURL, mediaAlt, encodedToken) =>\n  await axios.post(\n    \"/api/posts\",\n    { postData: { content, mediaURL, mediaAlt } },\n    { headers: { authorization: encodedToken } }\n  );\n\nconst deletePostService = async (postId, encodedToken) =>\n  await axios.delete(`/api/posts/${postId}`, {\n    headers: { authorization: encodedToken },\n  });\n\nconst editPostService = async (\n  postId,\n  content,\n  mediaURL,\n  mediaAlt,\n  encodedToken\n) =>\n  await axios.post(\n    `/api/posts/edit/${postId}`,\n    { postData: { content, mediaURL, mediaAlt } },\n    {\n      headers: { authorization: encodedToken },\n    }\n  );\n\nconst likePostService = async (postId, encodedToken) =>\n  await axios.post(\n    `/api/posts/like/${postId}`,\n    {},\n    {\n      headers: { authorization: encodedToken },\n    }\n  );\n\nconst dislikePostService = async (postId, encodedToken) =>\n  await axios.post(\n    `/api/posts/dislike/${postId}`,\n    {},\n    {\n      headers: { authorization: encodedToken },\n    }\n  );\n\nconst addCommentService = async (postId, commentData, encodedToken) =>\n  await axios.post(\n    `/api/comments/add/${postId}`,\n    { commentData: commentData },\n    { headers: { authorization: encodedToken } }\n  );\n\nconst editCommentService = async (\n  postId,\n  commentId,\n  commentData,\n  encodedToken\n) =>\n  await axios.post(\n    `/api/comments/edit/${postId}/${commentId}`,\n    { commentData: commentData },\n    { headers: { authorization: encodedToken } }\n  );\n\nconst deleteCommentService = async (postId, commentId, encodedToken) =>\n  await axios.post(\n    `/api/comments/delete/${postId}/${commentId}`,\n    {},\n    { headers: { authorization: encodedToken } }\n  );\n\nexport {\n  getAllPostsService,\n  createPostService,\n  editPostService,\n  deletePostService,\n  likePostService,\n  dislikePostService,\n  getSinglePostService,\n  addCommentService,\n  editCommentService,\n  deleteCommentService,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY,MAAMD,KAAK,CAACE,GAAG,CAAC,YAAY,CAAC;AAEpE,MAAMC,oBAAoB,GAAG,MAAOC,MAAM,IACxC,MAAMJ,KAAK,CAACE,GAAG,CAAE,cAAaE,MAAO,EAAC,CAAC;AAEzC,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,KACxE,MAAMT,KAAK,CAACU,IAAI,CACd,YAAY,EACZ;EAAEC,QAAQ,EAAE;IAAEL,OAAO;IAAEC,QAAQ;IAAEC;EAAS;AAAE,CAAC,EAC7C;EAAEI,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AAAE,CAC7C,CAAC;AAEH,MAAMK,iBAAiB,GAAG,MAAAA,CAAOV,MAAM,EAAEK,YAAY,KACnD,MAAMT,KAAK,CAACe,MAAM,CAAE,cAAaX,MAAO,EAAC,EAAE;EACzCQ,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AACzC,CAAC,CAAC;AAEJ,MAAMO,eAAe,GAAG,MAAAA,CACtBZ,MAAM,EACNE,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,YAAY,KAEZ,MAAMT,KAAK,CAACU,IAAI,CACb,mBAAkBN,MAAO,EAAC,EAC3B;EAAEO,QAAQ,EAAE;IAAEL,OAAO;IAAEC,QAAQ;IAAEC;EAAS;AAAE,CAAC,EAC7C;EACEI,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AACzC,CACF,CAAC;AAEH,MAAMQ,eAAe,GAAG,MAAAA,CAAOb,MAAM,EAAEK,YAAY,KACjD,MAAMT,KAAK,CAACU,IAAI,CACb,mBAAkBN,MAAO,EAAC,EAC3B,CAAC,CAAC,EACF;EACEQ,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AACzC,CACF,CAAC;AAEH,MAAMS,kBAAkB,GAAG,MAAAA,CAAOd,MAAM,EAAEK,YAAY,KACpD,MAAMT,KAAK,CAACU,IAAI,CACb,sBAAqBN,MAAO,EAAC,EAC9B,CAAC,CAAC,EACF;EACEQ,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AACzC,CACF,CAAC;AAEH,MAAMU,iBAAiB,GAAG,MAAAA,CAAOf,MAAM,EAAEgB,WAAW,EAAEX,YAAY,KAChE,MAAMT,KAAK,CAACU,IAAI,CACb,qBAAoBN,MAAO,EAAC,EAC7B;EAAEgB,WAAW,EAAEA;AAAY,CAAC,EAC5B;EAAER,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AAAE,CAC7C,CAAC;AAEH,MAAMY,kBAAkB,GAAG,MAAAA,CACzBjB,MAAM,EACNkB,SAAS,EACTF,WAAW,EACXX,YAAY,KAEZ,MAAMT,KAAK,CAACU,IAAI,CACb,sBAAqBN,MAAO,IAAGkB,SAAU,EAAC,EAC3C;EAAEF,WAAW,EAAEA;AAAY,CAAC,EAC5B;EAAER,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AAAE,CAC7C,CAAC;AAEH,MAAMc,oBAAoB,GAAG,MAAAA,CAAOnB,MAAM,EAAEkB,SAAS,EAAEb,YAAY,KACjE,MAAMT,KAAK,CAACU,IAAI,CACb,wBAAuBN,MAAO,IAAGkB,SAAU,EAAC,EAC7C,CAAC,CAAC,EACF;EAAEV,OAAO,EAAE;IAAEC,aAAa,EAAEJ;EAAa;AAAE,CAC7C,CAAC;AAEH,SACER,kBAAkB,EAClBI,iBAAiB,EACjBW,eAAe,EACfF,iBAAiB,EACjBG,eAAe,EACfC,kBAAkB,EAClBf,oBAAoB,EACpBgB,iBAAiB,EACjBE,kBAAkB,EAClBE,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}